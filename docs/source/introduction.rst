.. _Python: http://www.python.org

Introduction
============

*Wok* is a simple workflow management system implemented in Python_ that makes very easy to structure the workflows, parallelize their execution and monitor its progress among other things. It is designed in a modular way allowing to adapt it to different infraestructures.

For the time being it is strongly focused on clusters implementing any DRMAA_ compatible resource manager such as `Sun Grid Engine`_ among others with a shared folder among work nodes. Other, more flexible infrastructures (such as the cloud) are being studied for future implementations.

Workflows in *Wok* are defined in an *xml* file with the *.flow* extension. This definition includes:

- the different modules (or pieces of processing)
- the interconnections between modules (i.e. the input of module B links with the output of module A)
- explicit dependencies (i.e. module A cannot be executed until module B has finished)
- descriptions that can be used to generate documentation automatically

Each module corresponds with a piece of software that has to be run. For now, only Python_ scripts are allowed, but they can be used to wrap software written in other languages.

It is recommended, but not necessary, that the workflow definition (*.flow* file) and the modules implementations are in the same folder. As for example, the path where the flow is located is included in the *PYTHONPATH* automatically.

The execution of a workflow is started using a terminal with the *wok-run.py* script. It allows few options:

- Configuration files (-c file.conf)
- Configuration parameters (-D param=value)

and the workflow definition file (i.e. *myworkflow.flow*) as the first argument.

To monitor the execution of the workflow there are different resources available:

- The logs emited by the *wok-run.py* through the standard output
- The intermediate files generated by *Wok*, among them the tasks output.
- The web server that allows to use any internet browser. Recommended.

